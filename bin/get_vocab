#! /usr/bin/env python
# -*- coding: utf-8 -*-
# vim:fenc=utf-8
#
# Copyright Â© 2016 Truong Do <truongdq54@gmail.com>
#
# Distributed under terms of the MIT license.

"""

"""
from __future__ import print_function
import sys
import optparse
from collections import OrderedDict
from etra.io import smart_open

parser = optparse.OptionParser()
parser.add_option("--unk-thres", help="Unknown threshold (default 1)", default=1, type=int)

opts, args = parser.parse_args()
def main():
    text_fname = args[0]
    src_vocab_fname = args[1]
    trg_vocab_fname = args[2]
    
    src_vocab = OrderedDict()
    trg_vocab = OrderedDict()

    src_vocab["<s>"] = len(src_vocab)
    src_vocab["</s>"] = len(src_vocab)
    src_vocab["<unk>"] = len(src_vocab)

    trg_vocab["<s>"] = len(trg_vocab)
    trg_vocab["</s>"] = len(trg_vocab)
    trg_vocab["<unk>"] = len(trg_vocab)
    
    src_wcount = {}
    trg_wcount = {}
    with smart_open(text_fname, "r", "utf-8") as fin:
        for line in fin:
            line = line.strip()
            src_text, trg_text = line.split("|||")
            for w in src_text.split():
                if not w in src_wcount:
                    src_wcount[w] = 0
                src_wcount[w] += 1

            for w in trg_text.split():
                if not w in trg_wcount:
                    trg_wcount[w] = 0
                trg_wcount[w] += 1
    
    src_widx = len(src_vocab)
    trg_widx = len(trg_vocab)

    for w, wcount in src_wcount.items():
        if wcount > opts.unk_thres:
            src_vocab[w] = len(src_vocab)

    for w, wcount in trg_wcount.items():
        if wcount > opts.unk_thres:
            trg_vocab[w] = len(trg_vocab)

    with smart_open(src_vocab_fname, "w", "utf-8") as fout:
        for w, idx in src_vocab.items():
            fout.write("%s %d\n" % (w, idx))

    with smart_open(trg_vocab_fname, "w", "utf-8") as fout:
        for w, idx in trg_vocab.items():
            fout.write("%s %d\n" % (w, idx))

if __name__ == "__main__":
    main()
